#ifndef _LIBENCLOUD_CLIENT_H_
#define _LIBENCLOUD_CLIENT_H_

#include <QObject>
#include <QUrl>
#include <QNetworkRequest>
#include <QNetworkReply>
#include <QNetworkProxy>
#include <QNetworkAccessManager>
#include <QAuthenticator>
#include <QSslConfiguration>
#include <encloud/Common>
#include <encloud/Error>

namespace libencloud {

class LIBENCLOUD_DLLSPEC Client : public QObject
{
    Q_OBJECT

public:
    Client ();

    void setVerifyCA (bool b = true);
    void setDebug (bool b = true);

    void run (const QUrl &url, const QUrl &params, const QMap<QByteArray, QByteArray> &headers, 
            const QSslConfiguration &conf);

signals:
    void error (const libencloud::Error &err);
    void complete (const QString &reponse);

protected slots:
    void _proxyAuthenticationRequired (const QNetworkProxy &proxy, QAuthenticator *authenticator);
    void _sslErrors (QNetworkReply *reply, const QList<QSslError> &errors);
    void _networkError (QNetworkReply::NetworkError err);
    void _finished (QNetworkReply *reply);

protected:
    bool _verifyCA;
    bool _debug;
    bool _sslError;
    QNetworkAccessManager _qnam;
};

} // namespace libencloud

#endif  /* _LIBENCLOUD_CLIENT_H_ */
