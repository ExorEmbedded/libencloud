#ifndef _LIBENCLOUD_AUTH_H_
#define _LIBENCLOUD_AUTH_H_

#include <QNetworkProxy>
#include <QString>
#include <encloud/Common>

namespace libencloud 
{

/**
 * Authentication object used to communicate credentials for:
 *   - user/pass-based SSL and VPN connections
 *   - user/pass-based proxy authentication
 *   - decryption of PKCS12 files which contain X509 certificates/keys
 */
class LIBENCLOUD_DLLSPEC Auth
{
public:

    typedef enum
    {
        NoneId = -1,
        SwitchboardId,  // used also for VPN server authentication
        ProxyId,
        FirstId = SwitchboardId,
        LastId = ProxyId
    }
    Id;

    typedef enum
    {
        NoneType = -1,

        //
        // (id == SwitchboardId)
        //
        UserpassType = 0,
        CertificateType,
        
        //
        // (id == ProxyId)
        //
        HttpProxyType = 10,
        SocksProxyType,
        FirstType = NoneType,
        LastType = SocksProxyType
    }
    Type;

    Auth ();
    Auth (Id id, Type type = NoneType, QString url = "",
            QString user = "", QString pass = "", QString path = "");
    Auth (const QString &id, QString type = "", QString url = "",
            QString user = "", QString pass = "", QString path = "");

    bool isValid () const;
    QString toString () const;
    friend LIBENCLOUD_DLLSPEC QDebug operator << (QDebug d, const Auth &auth);

    Id getId () const;
    int setId (Id id);
    const QString getStrId () const;
    int setStrId (const QString &id);

    Type getType () const;
    int setType (Type type);
    const QString getStrType () const;
    int setStrType (const QString &type);
    static Type typeFromQt (QNetworkProxy::ProxyType type);
    static QNetworkProxy::ProxyType typeToQt (Type type);

    const QString &getUrl () const;
    int setUrl (const QString &url);

    const QString &getUser () const;
    int setUser (const QString &user);

    const QString &getPass () const;
    int setPass (const QString &pass);

    const QString &getPath () const;
    int setPath (const QString &path);

protected:
    bool _valid;
    Id _id;
    Type _type;
    QString _url;
    QString _user;
    QString _pass;
    QString _path;
};

}  // namespace libencloud

#endif  // _LIBENCLOUD_AUTH_H_
