#ifndef _LIBENCLOUD_HTTP_HANDLER_H_
#define _LIBENCLOUD_HTTP_HANDLER_H_

#include <QObject>
#include <QString>
#include <QStringList>
#include <QUuid>
#include <QVariant>
#include <encloud/Auth>
#include <encloud/Common>
#include <encloud/HttpAbstractHandler>
#include <encloud/State>
#include <encloud/Progress>

namespace libencloud {

// keep me aligned with _versionToApiHandler() factory method
typedef enum {
    API_VERSION_1 = 1,
    // future extensions here

    API_VERSION_CURRENT = API_VERSION_1  // set to current version
} 
ApiVersion;

class ApiHandler;

class LIBENCLOUD_DLLSPEC HttpHandler : public QObject, public HttpAbstractHandler
{
    Q_OBJECT;

public:

    HttpHandler ();
    ~HttpHandler ();

    // top-level concrete handler
    int handle (const HttpRequest &request, HttpResponse &response);

    // attributes used by HTTP API handlers
    QString getCoreError () const;

    State getCoreState () const;

    Progress getCoreProgress () const;

    QString getNeed () const;
    void removeNeed (const QString &what);

#ifdef LIBENCLOUD_MODE_ECE
    const QUuid &getPoi () const;
    int setPoi (const QUuid &uuid);
#endif

#ifdef LIBENCLOUD_MODE_SECE
    int setLicense (const QString &);
#endif

    int setClientPort (int port);
    int setAuth (const Auth &auth);
    const QVariant &getServerConfig () const;

signals:

#ifdef LIBENCLOUD_MODE_SECE
    void licenseSend (const QUuid &uuid);
#endif

    void clientPortSend (int port);
    void authSupplied (const Auth &auth);

private slots:
    void _coreErrorReceived (const QString &msg);
    void _coreStateChanged (State state);
    void _coreProgressReceived (const Progress &progress);
    void _needReceived (const QString &what);
    void _serverConfigReceived (const QVariant &config);

private:
    HttpAbstractHandler *_versionToApiHandler (ApiVersion version);   

    QString _coreError;
    State _coreState;
    Progress _coreProgress;
    QStringList _needs;

    QUuid _poi;

    QVariant _serverConfig;
};

}  // namespace libencloud

#endif  // _LIBENCLOUD_HTTP_HANDLER_H_
