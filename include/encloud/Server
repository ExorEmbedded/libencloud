#ifndef _LIBENCLOUD_SERVER_H_
#define _LIBENCLOUD_SERVER_H_

#include <QObject>
#include <encloud/Common>
#include <encloud/Http/HttpAbstractHandler>
#include <encloud/Http/HttpHandler>

// default (initial) port - can be overridden via setPort()
#define LIBENCLOUD_SRV_PORT_DFT 4804

namespace libencloud {

class Config;
class Core;
class HttpServer;

class LIBENCLOUD_DLLSPEC Server : public QObject
{
    Q_OBJECT;

    friend class Core;
    friend class HttpServer;

public:

    Server (QObject *parent = 0, Mode = EncloudMode);
    ~Server ();

    inline bool isValid () const {
        return _isValid; };

    inline HttpAbstractHandler *getHandler () const {
        return _handler; };
    int setHandler (HttpAbstractHandler *handler);

    inline QObject *getCoreObj() {
        return (QObject *) _core; };

    // set port (or initial port for scan if port is busy)
    int setInitialPort (int port);

    int start ();
    int stop ();

signals:
    void portBound (int port);
    void configSupply (const QVariant &config);
    void authSupply (const libencloud::Auth &auth);
    void actionRequest (const QString &action, const libencloud::Params &params);

public slots:
    void vpnIpAssigned (const QString &ip);

private:
    void _delete ();

    bool _isValid;
    QObject *_parent;
    Mode _mode;
    bool _running;
    Config *_cfg;
    Core *_core;
    HttpHandler *_handler;
    HttpServer *_localServer;
    HttpServer *_cloudServer;
    int _port;
};

}  // namespace libencloud

#endif  // _LIBENCLOUD_SERVER_H_
