#ifndef _LIBENCLOUD_API_COMMON_H_
#define _LIBENCLOUD_API_COMMON_H_

#include <QMap>
#include <QObject>
#include <QSettings>
#include <QSslConfiguration>
#include <QTimer>
#include <QUrl>
#include <encloud/Client>
#include <encloud/Common>
#include <encloud/HttpServer>

namespace libencloud {

class LIBENCLOUD_DLLSPEC Api : public QObject
{
    Q_OBJECT

public:
    typedef enum
    {
        SuccessRc = 0,
        ErrorRc
    }
    ResultCode;

    Api ();
    virtual ~Api ();

    // QIC-only: needs to be run once to get encloud settings
    int init ();

    void setHost (const QString &host);
    void setPort (int port);

    //
    // shared data
    //
    static const QSettings *getSettings ();
    static const QUrl &getUrl ();

signals:
    // QIC-only: other clients won't need to wait for settings (fixed port allocation)
    void gotSettings ();

//
// internals
// 

protected slots:
    void _settingsTimeout ();
    
protected:

    static QSettings *__settings;
    static QUrl __url;

    QTimer _settingsTimer;
    QString _host;
    Client _client;
    QUrl _params;
    QMap<QByteArray, QByteArray> _headers;
    QSslConfiguration _config;
};

}  // namespace libencloud

#endif  // _LIBENCLOUD_API_COMMON_H_
